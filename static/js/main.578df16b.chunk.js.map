{"version":3,"sources":["utils/localstorage.js","utils/config.js","utils/Api.js","redux/constants/userContants.js","redux/actions/userAction.js","components/Navbar.js","redux/constants/productConstants.js","components/Product.js","pages/mainPage.js","redux/actions/productActions.js","pages/FilteredProducts.js","redux/constants/cartConstants.js","utils/utils.js","redux/actions/cartActions.js","pages/ProductView.js","components/CartItem.js","utils/hooks/useLogin.js","pages/ShoppingCart.js","pages/ValidationScreen.js","pages/ConfirmationPage.js","pages/SignUp/index.js","pages/SignIn/index.js","App.js","reportWebVitals.js","redux/reducers/cartReducers.js","redux/reducers/userReducer.js","redux/store.js","redux/reducers/productReducers.js","index.js"],"names":["token_key","getToken","token","window","localStorage","getItem","logout","clear","config","baseURL","process","Api","getRequest","async","params","method","headers","Authorization","res","fetch","path","data","text","statusCode","status","e","console","error","concat","postRequest","body","JSON","stringify","log","deleteRequest","putRequest","SET_USER","SET_INITIAL_STATE","setUserDetails","dispatch","type","actionTypes","user","parse","payload","isLogin","details","Navbar","_ref","click","cart","useSelector","state","history","useHistory","useDispatch","cartItems","getCartCount","useMemo","reduce","qty","item","Number","_handleLogout","push","_jsxs","className","children","_jsx","Link","to","userInfo","onClick","GET_PRODUCTS_REQUEST","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","GET_PRODUCT_DETAILS_RESET","Product","imageUrl","description","price","name","productId","linkTo","truncatedDescription","substring","src","alt","MainPage","getProducts","products","loading","useEffect","response","message","handleCategoryClick","category","map","product","_id","FilteredProducts","match","filteredProducts","filter","_ref2","ADD_TO_CART","REMOVE_FROM_CART","CART_RESET","FETCH_MY_CART","convertToCartData","carts","c","countInStock","count","addToCart","id","ProductView","setQty","useState","getProductDetails","p","_Fragment","brand","value","onChange","target","Array","keys","x","addToCartHandler","alert","CartItem","qtyChangeHandler","removeHandler","editable","productUrl","useLogin","loginInfo","setLoginInfo","replace","checkLogin","useCallback","ShoppingCart","removeFromCartHandler","pId","DeleteRequest","removeFromCart","length","toFixed","ValidationScreen","firstName","setFirstName","lastName","setLastName","address","setAddress","city","setCity","setState","zip","setZip","email","setEmail","phone","setPhone","onSubmit","preventDefault","quantity","order","axios","post","orderDetails","ConfirmationPage","lastOrder","Object","handleReturnHome","SignUp","fullName","setFullName","password","setPassword","setLoading","setError","handleSubmit","htmlFor","placeholder","SignIn","setItem","setToken","App","sideToggle","setSideToggle","strigifyData","Router","Switch","Route","exact","component","mainPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CART_INITIAL_state","USER_INITIAL_STATE","reducer","combineReducers","arguments","undefined","action","existItem","find","middleware","thunk","INITIAL_STATE","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","Provider","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.578df16b.chunk.js","sourcesContent":["export const token_key = 'E_COMMERCE_TOKEN'\r\n\r\nexport const setToken = token => {\r\n  window.localStorage.setItem(token_key, token)\r\n}\r\n\r\nexport const getToken = () => {\r\n  let token = window.localStorage.getItem(token_key)\r\n  if (!!token) return token\r\n  return false\r\n}\r\n\r\nexport const isLogin = () => {\r\n  if (!!getToken()) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport const logout = () => {\r\n  window.localStorage.clear()\r\n}\r\n","const devConfig = {\r\n  baseURL: process.env.REACT_APP_API_BASE_URL || \"http://localhost:3001\",\r\n};\r\n\r\nconst prodConfig = {\r\n  baseURL: \"http://localhost:3000\", //your production url\r\n};\r\n\r\nexport const config = devConfig;\r\n","import { config } from \"./config\";\r\nimport { getToken } from \"./localstorage\";\r\n\r\n/**\r\n * Effectue une requête GET avec le token d'authentification.\r\n * @param {string} path - Le chemin de l'API à interroger.\r\n * @returns {Promise<{statusCode: number, data: any}>} - Une promesse résolue avec le statut de la réponse et les données renvoyées.\r\n */\r\nconst getRequest = async (path) => {\r\n  try {\r\n    const params = {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + getToken(),\r\n      },\r\n    };\r\n    const res = await fetch(config.baseURL + path, params);\r\n    const data = await res.text();\r\n    return { statusCode: res.status, data };\r\n  } catch (e) {\r\n    console.error(`Erreur dans la requête GET (${path}) :- `, e);\r\n    return { statusCode: 400, data: [] };\r\n  }\r\n};\r\n\r\n/**\r\n * Effectue une requête POST avec le token d'authentification.\r\n * @param {string} path - Le chemin de l'API à interroger.\r\n * @param {object} body - Les données à inclure dans le corps de la requête.\r\n * @returns {Promise<{statusCode: number, data: any}>} - Une promesse résolue avec le statut de la réponse et les données renvoyées.\r\n */\r\nconst postRequest = async (path, body) => {\r\n  try {\r\n    const params = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + getToken(),\r\n      },\r\n      body: JSON.stringify(body),\r\n    };\r\n\r\n    const res = await fetch(config.baseURL + path, params);\r\n    const data = await res.text();\r\n    return { statusCode: res.status, data };\r\n  } catch (e) {\r\n    console.log(`Erreur dans la requête POST (${path}) :- `, e);\r\n  }\r\n};\r\n\r\n/**\r\n * Effectue une requête DELETE avec le token d'authentification.\r\n * @param {string} path - Le chemin de l'API à interroger.\r\n * @returns {Promise<{statusCode: number, data: any}>} - Une promesse résolue avec le statut de la réponse et les données renvoyées.\r\n */\r\nconst deleteRequest = async (path) => {\r\n  try {\r\n    const params = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + getToken(),\r\n      },\r\n    };\r\n\r\n    const res = await fetch(config.baseURL + path, params);\r\n    const data = await res.text();\r\n    return { statusCode: res.status, data };\r\n  } catch (e) {\r\n    console.log(`Erreur dans la requête DELETE (${path}) :- `, e);\r\n  }\r\n};\r\n\r\n/**\r\n * Effectue une requête PUT avec le token d'authentification.\r\n * @param {string} path - Le chemin de l'API à interroger.\r\n * @param {object} body - Les données à inclure dans le corps de la requête.\r\n * @returns {Promise<{statusCode: number, data: any}>} - Une promesse résolue avec le statut de la réponse et les données renvoyées.\r\n */\r\nconst putRequest = async (path, body) => {\r\n  try {\r\n    const params = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + getToken(),\r\n      },\r\n      body: JSON.stringify(body),\r\n    };\r\n\r\n    const res = await fetch(config.baseURL + path, params);\r\n    const data = await res.text();\r\n    return { statusCode: res.status, data };\r\n  } catch (e) {\r\n    console.log(`Erreur dans la requête PUT (${path}) :- `, e);\r\n  }\r\n};\r\n\r\n/**\r\n * Interface pour les méthodes de requête API.\r\n */\r\nexport const Api = {\r\n  getRequest,\r\n  postRequest,\r\n  deleteRequest,\r\n  putRequest,\r\n};\r\n","export const SET_USER = 'SET_USER'\r\nexport const SET_INITIAL_STATE = 'SET_INITIAL_STATE'\r\nexport const USER_RESET = 'USER_RESET'\r\n","import {Api} from '../../utils/Api'\r\nimport * as actionTypes from '../constants/userContants'\r\n\r\nexport const setUserDetails = () => async dispatch => {\r\n  const {statusCode, data} = await Api.getRequest(`/api/user/me`)\r\n  // console.log({statusCode, data})\r\n  if (statusCode === 400 || statusCode === 500) {\r\n    dispatch({\r\n      type: actionTypes.SET_INITIAL_STATE,\r\n    })\r\n    return\r\n  }\r\n  const {user} = JSON.parse(data)\r\n  dispatch({\r\n    type: actionTypes.SET_USER,\r\n    payload: {\r\n      isLogin: true,\r\n      details: {...user},\r\n    },\r\n  })\r\n}\r\n\r\nexport const setInitialState = () => async dispatch => {\r\n  dispatch({\r\n    type: actionTypes.SET_INITIAL_STATE,\r\n  })\r\n}\r\n","import './Navbar.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useMemo } from 'react';\r\nimport { logout } from '../utils/localstorage';\r\nimport { setInitialState } from '../redux/actions/userAction';\r\n\r\nconst Navbar = ({ click }) => {\r\n  const cart = useSelector(state => state.cart);\r\n  const history = useHistory();\r\n  const user = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n  const { cartItems } = cart;\r\n\r\n  // Utiliser des constantes pour les noms de classes réutilisés\r\n  const cartLinkClass = 'cart__link';\r\n  const cartLogoBadgeClass = 'cartlogo__badge';\r\n\r\n  // Utiliser useMemo pour mémoriser la valeur de getCartCount\r\n  const getCartCount = useMemo(() => cartItems.reduce((qty, item) => Number(item.qty) + qty, 0), [cartItems]);\r\n\r\n  // Fonction pour le rendu conditionnel du lien de déconnexion\r\n  const renderLogoutLink = () => {\r\n    if (!user.userInfo.isLogin) {\r\n      return <Link to=\"/signin\">Compte</Link>;\r\n    } else {\r\n      return <p onClick={_handleLogout}>Déconnexion</p>;\r\n    }\r\n  };\r\n\r\n  // Gestion de la déconnexion\r\n  const _handleLogout = () => {\r\n    dispatch(setInitialState());\r\n    logout();\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar__logo\">\r\n        <h2>Le Vestiaire</h2>\r\n      </div>\r\n\r\n      <ul className=\"navbar__links\">\r\n        <li>\r\n          <Link to=\"/cart\" className={cartLinkClass}>\r\n            <i className=\"fas fa-shopping-cart\"></i>\r\n            <span>\r\n              Panier <span className={cartLogoBadgeClass}>{getCartCount}</span>\r\n            </span>\r\n          </Link>\r\n        </li>\r\n\r\n        <li>\r\n          <Link to=\"/\">Magasin</Link>\r\n        </li>\r\n\r\n        <li>{renderLogoutLink()}</li>\r\n      </ul>\r\n\r\n      <div className=\"hamburger__menu\" onClick={click}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export const GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUEST\";\r\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\";\r\nexport const GET_PRODUCTS_FAIL = \"GET_PRODUCTS_FAIL\";\r\n\r\nexport const GET_PRODUCT_DETAILS_REQUEST = \"GET_PRODUCT_DETAILS_REQUEST\";\r\nexport const GET_PRODUCT_DETAILS_SUCCESS = \"GET_PRODUCT_DETAILS_SUCCESS\";\r\nexport const GET_PRODUCT_DETAILS_FAIL = \"GET_PRODUCT_DETAILS_FAIL\";\r\nexport const GET_PRODUCT_DETAILS_RESET = \"GET_PRODUCT_DETAILS_RESET\";\r\n","import React from \"react\";\r\nimport \"./Product.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Product = ({ imageUrl, description, price, name, productId, linkTo }) => {\r\n  // Limiter la description à 100 caractères\r\n  const truncatedDescription = `${description.substring(0, 100)}...`;\r\n\r\n  return (\r\n    <div className=\"product\">\r\n      <img src={imageUrl} alt={name} />\r\n\r\n      <div className=\"product__info\">\r\n\r\n        <p className=\"info__name\">{name}</p>\r\n\r\n\r\n        <p className=\"info__description\">{truncatedDescription}</p>\r\n\r\n\r\n        <p className=\"info__price\">€{price}</p>\r\n\r\n        {/* Lien vers la page détaillée du produit */}\r\n        <Link to={linkTo || `/product/${productId}`} className=\"info__button\">\r\n          Vue détaillée\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom'; // Importer useHistory\r\nimport './mainPage.css';\r\n\r\nimport { getProducts as listProducts } from '../redux/actions/productActions';\r\nimport { setUserDetails } from '../redux/actions/userAction';\r\n\r\nimport Product from '../components/Product';\r\n\r\nconst MainPage = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory(); // Initialiser useHistory\r\n\r\n  // Sélectionner les données des produits depuis le state global\r\n  const getProducts = useSelector((state) => state.getProducts);\r\n  const { products, loading, error } = getProducts;\r\n\r\n  // Utiliser useEffect pour charger la liste des produits au montage du composant\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  // Utiliser useEffect pour charger les détails de l'utilisateur au montage du composant\r\n  useEffect(() => {\r\n    dispatch(setUserDetails());\r\n  }, [dispatch]);\r\n\r\n  // Fonction pour gérer le clic sur une catégorie\r\n  const handleCategoryClick = (category) => {\r\n    // Rediriger vers la catégorie spécifiée\r\n    history.push(`/category/${category}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mainPage\">\r\n      {/* Catégories avec des événements onClick pour gérer les clics */}\r\n      <h2 className=\"mainPage__title\" onClick={() => handleCategoryClick('Robe')}>\r\n        Robes\r\n      </h2>\r\n      <h2 className=\"mainPage__title\" onClick={() => handleCategoryClick('Chaussure')}>Chaussures</h2>\r\n      <h2 className=\"mainPage__title\" onClick={() => handleCategoryClick('Jeans')}>Jeans</h2>\r\n      <h2 className=\"mainPage__title\" onClick={() => handleCategoryClick('Pull')}>Pull</h2>\r\n      <h2 className=\"mainPage__title\" onClick={() => handleCategoryClick('Veste')}>Vestes</h2>\r\n\r\n      {/* Affichage des produits en fonction de l'état de chargement et des erreurs */}\r\n      <div className=\"mainPage__products\">\r\n        {loading ? (\r\n          <h2>Loading...</h2>\r\n        ) : error ? (\r\n          <h2>{error}</h2>\r\n        ) : (\r\n          // Mapper à travers les produits pour les afficher\r\n          products.map((product) => (\r\n            <Product\r\n              key={product._id}\r\n              name={product.name}\r\n              description={product.description}\r\n              price={product.price}\r\n              imageUrl={product.imageUrl}\r\n              productId={product._id}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import * as actionTypes from '../constants/productConstants'\r\nimport {Api} from '../../utils/Api'\r\n\r\nexport const getProducts = () => async dispatch => {\r\n  try {\r\n    dispatch({type: actionTypes.GET_PRODUCTS_REQUEST})\r\n\r\n    const {data} = await Api.getRequest('/api/products')\r\n\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCTS_SUCCESS,\r\n      payload: JSON.parse(data),\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCTS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getProductDetails = id => async dispatch => {\r\n  try {\r\n    dispatch({type: actionTypes.GET_PRODUCT_DETAILS_REQUEST})\r\n\r\n    const {data} = await Api.getRequest(`/api/products/${id}`)\r\n    const p = JSON.parse(data)\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\r\n      payload: {\r\n        ...p,\r\n      },\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const removeProductDetails = () => dispatch => {\r\n  dispatch({type: actionTypes.GET_PRODUCT_DETAILS_RESET})\r\n}\r\n","// FilteredProducts.js\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './filteredProducts.css';\r\nimport Product from '../components/Product';\r\n\r\nconst FilteredProducts = ({ match }) => {\r\n  const category = match.params.category;\r\n\r\n  const { products, loading, error } = useSelector((state) => state.getProducts);\r\n\r\n  // Filtrer les produits en fonction de la catégorie sélectionnée\r\n  const filteredProducts = products.filter((product) => product.category === category);\r\n\r\n  return (\r\n    <div className=\"category-screen\">\r\n      <h2 className=\"category-screen__title\">{category}</h2>\r\n      <div className=\"category-screen__products\">\r\n        {/* Afficher les produits filtrés */}\r\n        {loading ? (\r\n          <h2>Loading...</h2>\r\n        ) : error ? (\r\n          <h2>{`Error: ${error}`}</h2>\r\n        ) : (\r\n          filteredProducts.map(({ _id, name, description, price, imageUrl }) => (\r\n            <Product\r\n              key={_id}\r\n              name={name}\r\n              description={description}\r\n              price={price}\r\n              imageUrl={imageUrl}\r\n              productId={_id}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilteredProducts;\r\n","export const ADD_TO_CART = 'ADD_TO_CART'\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART'\r\nexport const CART_RESET = 'CART_RESET'\r\nexport const FETCH_MY_CART = 'FETCH_MY_CART'\r\n","export const convertToCartData = carts => {\r\n  return carts.map(c => {\r\n    return {\r\n      product: c.productId._id,\r\n      name: c.productId.name,\r\n      imageUrl: c.productId.imageUrl,\r\n      price: c.productId.price,\r\n      countInStock: c.productId.countInStock,\r\n      qty: c.count,\r\n      _id: c._id,\r\n    }\r\n  })\r\n}\r\n","import * as actionTypes from '../constants/cartConstants';\r\nimport { Api } from '../../utils/Api';\r\nimport { convertToCartData } from '../../utils/utils';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch) => {\r\n  const { data } = await Api.getRequest(`/api/products/${id}`);\r\n  const product = JSON.parse(data);\r\n\r\n  dispatch({\r\n    type: actionTypes.ADD_TO_CART,\r\n    payload: {\r\n      product: product._id,\r\n      name: product.name,\r\n      imageUrl: product.imageUrl,\r\n      price: product.price,\r\n      countInStock: product.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  Api.postRequest('/api/cart', { productId: id, count: qty });\r\n};\r\n\r\nexport const removeFromCart = ({ pId, _id }) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.REMOVE_FROM_CART,\r\n    payload: pId,\r\n  });\r\n\r\n  Api.DeleteRequest('/api/cart/' + _id);\r\n};\r\n\r\nexport const resetCart = () => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.CART_RESET,\r\n  });\r\n};\r\n\r\nexport const fetchCart = () => async (dispatch) => {\r\n  try {\r\n    const { data: strigifyData } = await Api.getRequest(`/api/cart/`);\r\n    const { carts } = JSON.parse(strigifyData);\r\n\r\n    dispatch({\r\n      type: actionTypes.FETCH_MY_CART,\r\n      payload: {\r\n        carts: convertToCartData(carts),\r\n      },\r\n    });\r\n  } catch (e) {\r\n    console.log('EROROR :  ', e);\r\n  }\r\n};\r\n\r\nexport const confirmOrder = (orderDetails) => (dispatch) => {\r\n  dispatch({\r\n    type: 'CONFIRM_ORDER',\r\n    payload: orderDetails,\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import './ProductView.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getProductDetails } from '../redux/actions/productActions';\r\nimport { addToCart } from '../redux/actions/cartActions';\r\n\r\nconst ProductView = ({ match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const user = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { loading, error, product } = useSelector(state => state.getProductDetails);\r\n\r\n  useEffect(() => {\r\n    if (product && match.params.id !== product._id) {\r\n      dispatch(getProductDetails(match.params.id));\r\n    }\r\n  }, [dispatch, match, product]);\r\n\r\n  const addToCartHandler = () => {\r\n    if (user.userInfo.isLogin) {\r\n      dispatch(addToCart(product._id, qty));\r\n      history.push('/cart');\r\n    } else {\r\n      alert('Vous devez d\\'abord vous connecter.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ProductView\">\r\n      {loading ? (\r\n        <h2>Loading...</h2>\r\n      ) : error ? (\r\n        <h2>{`Erreur: ${error}`}</h2>\r\n      ) : (\r\n        <>\r\n          <div className=\"ProductView__left\">\r\n            <div className=\"left__image\">\r\n              <img src={product.imageUrl} alt={product.name} />\r\n            </div>\r\n            <div className=\"left__info\">\r\n              <p className=\"left__name\">{product.name}</p>\r\n              <p>Prix: €{product.price}</p>\r\n              <p>Description: {product.description}</p>\r\n              <p>Catégorie: {product.category}</p>\r\n              <p>Marque: {product.brand}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"ProductView__right\">\r\n            <div className=\"right__info\">\r\n              <p>\r\n                Prix:\r\n                <span>{`€${product.price}`}</span>\r\n              </p>\r\n              <p>\r\n                Statut:\r\n                <span>{product.countInStock > 0 ? 'En Stock' : 'En rupture de stock'}</span>\r\n              </p>\r\n              <p>\r\n                Qté\r\n                <select value={qty} onChange={e => setQty(e.target.value)}>\r\n                  {[...Array(product.countInStock).keys()].map(x => (\r\n                    <option key={x + 1} value={x + 1}>\r\n                      {x + 1}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </p>\r\n              <p>\r\n                <button type=\"button\" onClick={addToCartHandler}>\r\n                  Ajouter au panier\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductView;\r\n","import \"./CartItem.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CartItem = ({ item, qtyChangeHandler, removeHandler, editable = true }) => {\r\n  const productUrl = `/product/${item.product}`;\r\n\r\n  return (\r\n    <div className=\"cartitem\">\r\n      {/* Image */}\r\n      <div className=\"cartitem__image\">\r\n        <img src={item.imageUrl} alt={item.name} />\r\n      </div>\r\n      \r\n      {/* Nom avec lien */}\r\n      <Link to={productUrl} className=\"cartItem__name\">\r\n        <p>{item.name}</p>\r\n      </Link>\r\n      \r\n      {/* Prix */}\r\n      <p className=\"cartitem__price\">{`${item.price}€`}</p>\r\n      \r\n      {/* Sélecteur de quantité */}\r\n      {editable && (\r\n        <select\r\n          value={item.qty}\r\n          onChange={(e) => qtyChangeHandler(item.product, e.target.value)}\r\n          className=\"cartItem__select\"\r\n        >\r\n          {[...Array(item.countInStock).keys()].map((x) => (\r\n            <option key={x + 1} value={x + 1}>\r\n              {x + 1}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      )}\r\n      \r\n      {/* Bouton de suppression */}\r\n      {editable && (\r\n        <button\r\n          className=\"cartItem__deleteBtn\"\r\n          onClick={() => removeHandler(item.product)}\r\n        >\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React, {useCallback, useEffect, useState} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory} from 'react-router'\r\nimport {Api} from '../Api'\r\nimport {logout} from '../localstorage'\r\n\r\nfunction useLogin() {\r\n  const [loginInfo, setLoginInfo] = useState({\r\n    loading: true,\r\n    isLogin: false,\r\n  })\r\n  const {replace} = useHistory()\r\n  const checkLogin = useCallback(async () => {\r\n    const {statusCode, data} = await Api.getRequest(`/api/user/me`)\r\n    // console.log({statusCode, data})\r\n    if (statusCode === 400 || statusCode === 500) {\r\n      replace('/')\r\n      logout()\r\n      return\r\n    }\r\n    setLoginInfo({loading: false, isLogin: true})\r\n  }, [replace])\r\n  useEffect(() => {\r\n    checkLogin()\r\n  }, [checkLogin])\r\n  return {loginInfo}\r\n}\r\n\r\nexport default useLogin\r\n","import \"./ShoppingCart.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Components\r\nimport CartItem from \"../components/CartItem\";\r\n\r\n// Actions\r\nimport { addToCart, removeFromCart } from \"../redux/actions/cartActions\";\r\nimport useLogin from \"../utils/hooks/useLogin\";\r\n\r\nconst ShoppingCart = () => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { loginInfo } = useLogin();\r\n  const { cartItems } = cart;\r\n\r\n  const qtyChangeHandler = (id, qty) => {\r\n    dispatch(addToCart(id, qty));\r\n  };\r\n\r\n  const removeFromCartHandler = (item) => {\r\n    dispatch(removeFromCart({ pId: item.product, _id: item._id }));\r\n  };\r\n\r\n  const getCartCount = () => cartItems.reduce((qty, item) => Number(item.qty) + qty, 0);\r\n\r\n  const getCartSubTotal = () =>\r\n    cartItems.reduce((price, item) => price + item.price * item.qty, 0).toFixed(2);\r\n\r\n  const renderCartItems = () => {\r\n    if (cartItems.length === 0) {\r\n      return (\r\n        <div>\r\n          Votre panier est vide <Link to=\"/\">Retour au magasin</Link>\r\n        </div>\r\n      );\r\n    } else {\r\n      return cartItems.map((item) => (\r\n        <CartItem\r\n          key={item.product}\r\n          item={item}\r\n          qtyChangeHandler={qtyChangeHandler}\r\n          removeHandler={() => removeFromCartHandler(item)}\r\n        />\r\n      ));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loginInfo.loading ? (\r\n        <h1>Loading.....</h1>\r\n      ) : loginInfo.isLogin ? (\r\n        <div className=\"ShoppingCart\">\r\n          <div className=\"ShoppingCart__left\">\r\n            <h2>Panier</h2>\r\n            {renderCartItems()}\r\n          </div>\r\n\r\n          <div className=\"ShoppingCart__right\">\r\n            <div className=\"ShoppingCart__info\">\r\n              <p>Sous total ({getCartCount()}) article</p>\r\n              <p>€{getCartSubTotal()}</p>\r\n            </div>\r\n            <div>\r\n              <Link to=\"/checkout\">\r\n                <button>Passer au paiement</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShoppingCart;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux'; \r\nimport { useHistory } from 'react-router-dom'; \r\nimport './ValidationScreen.css'; \r\nimport CartItem from '../components/CartItem';\r\nimport { confirmOrder } from '../redux/actions/cartActions'; \r\n\r\nconst ValidationScreen = () => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [zip, setZip] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n\r\n  // Récupérez le panier depuis le store Redux\r\n  const cartItems = useSelector((state) => state.cart.cartItems);\r\n  const dispatch = useDispatch(); // Initialisez useDispatch\r\n  const history = useHistory(); // Utilisez useHistory pour gérer l'historique de navigation\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Construisez un tableau de produits à partir du panier\r\n    const products = cartItems.map((item) => ({\r\n      name: item.name,\r\n      price: item.price,\r\n      quantity: item.qty,\r\n    }));\r\n\r\n    const order = {\r\n      firstName,\r\n      lastName,\r\n      address,\r\n      city,\r\n      state,\r\n      zip,\r\n      email,\r\n      phone,\r\n      products, // Utilisez le tableau de produits construit\r\n    };\r\n\r\n    try {\r\n      // Envoi des données au backend\r\n      await axios.post('http://localhost:3001/api/orders', order);\r\n\r\n      // Appel de l'action confirmOrder avec les détails de la commande\r\n      dispatch(confirmOrder(order));\r\n\r\n      // Réinitialisez le formulaire ou effectuez d'autres actions après la soumission réussie\r\n      setFirstName('');\r\n      setLastName('');\r\n      setAddress('');\r\n      setCity('');\r\n      setState('');\r\n      setZip('');\r\n      setEmail('');\r\n      setPhone('');\r\n\r\n      \r\n\r\n      // Redirigez l'utilisateur vers la page de confirmation\r\n      history.push('/confirmation');\r\n    } catch (error) {\r\n      console.error('Erreur lors de la soumission de la commande :', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"validationscreen\">\r\n      <form onSubmit={handleSubmit} className=\"validationscreen__form\">\r\n        <label>\r\n          Prénom:\r\n          <input type=\"text\" value={firstName} onChange={(e) => setFirstName(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          Nom:\r\n          <input type=\"text\" value={lastName} onChange={(e) => setLastName(e.target.value)} />\r\n        </label>\r\n        <label>\r\n         Adresse:\r\n          <input type=\"text\" value={address} onChange={(e) => setAddress(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          Ville:\r\n          <input type=\"text\" value={city} onChange={(e) => setCity(e.target.value)} />\r\n        </label>\r\n        <label>\r\n           Departement:\r\n          <input type=\"text\" value={state} onChange={(e) => setState(e.target.value)} />\r\n        </label>\r\n        <label>\r\n           Code postal:\r\n          <input type=\"text\" value={zip} onChange={(e) => setZip(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          Email:\r\n          <input type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          Numéro de téléphone:\r\n          <input type=\"text\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n         </label>\r\n        <button type=\"submit\" className=\"validationscreen__submit-btn\">\r\n          Envoyer\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"validationscreen__cart\">\r\n        {cartItems.map((product) => (\r\n          <CartItem\r\n            key={product.product}\r\n            item={product}\r\n            editable={false}  // Passer editable=false pour désactiver les options de modification\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ValidationScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { resetCart } from \"../redux/actions/cartActions\";\r\nimport './ConfirmationPage.css';\r\n\r\nconst ConfirmationPage = () => {\r\n  const orderDetails = useSelector((state) => state.cart.lastOrder);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // S'assure que les détails de la commande existent avant de continuer\r\n    if (!orderDetails || Object.keys(orderDetails).length === 0) {\r\n      // Redirige vers une page d'erreur\r\n      history.push(\"/error\"); \r\n    }\r\n  }, [orderDetails, history]);\r\n\r\n  const { firstName, lastName, email, phone, products } = orderDetails;\r\n\r\n  const handleReturnHome = () => {\r\n    // Réinitialiser le panier une fois la commande confirmée\r\n    dispatch(resetCart());\r\n\r\n    // Redirection vers la page d'accueil\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"confirmation-page\">\r\n      <h1>Confirmation de commande</h1>\r\n      <p>\r\n        Merci, {firstName} {lastName}, pour votre commande! Voici les détails de votre commande:\r\n      </p>\r\n      <p>\r\n        <strong>Email:</strong> {email}\r\n      </p>\r\n      <p>\r\n        <strong>Numéro de téléphone:</strong> {phone}\r\n      </p>\r\n      <p>\r\n        <strong>Article commandé:</strong>\r\n      </p>\r\n      <ul>\r\n        {products.map((product) => (\r\n          <li key={product.name}>\r\n            {product.name} - {product.price}€ (Quantité: {product.quantity})\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <p className=\"confirmation-page__thank-you\">Votre commande est confirmée. Merci d'avoir réalisé votre shopping chez nous!</p>\r\n\r\n      {/* Bouton pour revenir à la page d'accueil */}\r\n      <button onClick={handleReturnHome}>Retour à la page d'accueil</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmationPage;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Api } from '../../utils/Api';\r\nimport './signup.css';\r\n\r\nfunction SignUp() {\r\n  const history = useHistory();\r\n  const [fullName, setFullName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = useCallback(async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (fullName.length > 2 && email.length > 2 && password.length > 2) {\r\n      setLoading(true);\r\n      const { statusCode, data } = await Api.postRequest('/api/user/signup', {\r\n        email,\r\n        fullName,\r\n        password,\r\n      });\r\n      setLoading(false);\r\n\r\n      if (statusCode === 400 || statusCode === 500 || statusCode === 403) {\r\n        setError(data);\r\n        return;\r\n      }\r\n\r\n      alert(data);\r\n      history.replace('/signin');\r\n    }\r\n  }, [email, fullName, password, history]);\r\n\r\n  return (\r\n    <div className=\"signupscreen\">\r\n      <div className=\"container\">\r\n        <div className=\"innerContainer\">\r\n          <div className=\"backButton\" onClick={() => history.push('/')}>\r\n            <i className=\"fas fa-arrow-circle-left fa-5x\"></i>\r\n          </div>\r\n          <p>Inscription</p>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"fullName\">Nom complet</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"fullName\"\r\n              name=\"fullName\"\r\n              placeholder=\"Votre nom complet..\"\r\n              value={fullName}\r\n              onChange={(e) => setFullName(e.target.value)}\r\n            />\r\n\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Votre email..\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n\r\n            <label htmlFor=\"password\">Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Votre mot de passe..\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n\r\n            <Link to=\"/signin\" className=\"link\">\r\n              <span>Vous avez déjà un compte ?</span>\r\n            </Link>\r\n            <br />\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            <button type=\"submit\">Inscription</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Api } from '../../utils/Api';\r\nimport { setToken } from '../../utils/localstorage';\r\nimport './signIn.css';\r\n\r\nfunction SignIn() {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = useCallback(async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (email.length > 2 && password.length > 2) {\r\n      setLoading(true);\r\n      const { statusCode, data } = await Api.postRequest('/api/user/signin', {\r\n        email,\r\n        password,\r\n      });\r\n      setLoading(false);\r\n\r\n      if (statusCode === 400 || statusCode === 500 || statusCode === 403) {\r\n        setError(data);\r\n        return;\r\n      }\r\n\r\n      const { token } = JSON.parse(data);\r\n      setToken(token);\r\n      history.replace('/');\r\n    }\r\n  }, [email, password, history]);\r\n\r\n  return (\r\n    <div className=\"signinscreen\">\r\n      <div className=\"container\">\r\n        <div className=\"innerContainer\">\r\n          <div className=\"backButton\" onClick={() => history.push('/')}>\r\n            <i className=\"fas fa-arrow-circle-left fa-5x\"></i>\r\n          </div>\r\n          <p>Connexion</p>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Votre email..\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <label htmlFor=\"password\">Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Votre mot de passe..\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n\r\n            <Link to=\"/signup\" className=\"link\">\r\n              <span>Créer un nouveau compte ?</span>\r\n            </Link>\r\n            <br />\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            <button type=\"submit\">Connexion</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import './App.css'\r\nimport {useEffect, useState} from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\n// Components\r\nimport Navbar from './components/Navbar'\r\n\r\n\r\n// pages\r\nimport mainPage from './pages/mainPage'\r\nimport FilteredProducts from './pages/FilteredProducts';\r\nimport ProductView from './pages/ProductView'\r\nimport ShoppingCart from './pages/ShoppingCart'\r\nimport ValidationScreen from './pages/ValidationScreen'\r\nimport ConfirmationPage from './pages/ConfirmationPage'\r\nimport SignUp from './pages/SignUp'\r\nimport SignIn from './pages/SignIn'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchCart} from './redux/actions/cartActions'\r\nimport {setUserDetails} from './redux/actions/userAction'\r\n\r\nfunction App() {\r\n  const [sideToggle, setSideToggle] = useState(false)\r\n  // fetchCart\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(fetchCart())\r\n    dispatch(setUserDetails())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar click={() => setSideToggle(true)} />\r\n\r\n\r\n      <main className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={mainPage} />\r\n          <Route exact path=\"/category/:category\" component={FilteredProducts} />\r\n          <Route exact path=\"/product/:id\" component={ProductView} />\r\n          <Route exact path=\"/cart\" component={ShoppingCart} />\r\n          <Route exact path=\"/checkout\" component={ValidationScreen} />\r\n          <Route exact path=\"/confirmation\" component={ConfirmationPage} />\r\n          <Route exact path=\"/signup\" component={SignUp} />\r\n          <Route exact path=\"/signin\" component={SignIn} />\r\n        </Switch>\r\n      </main>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import * as actionTypes from '../constants/cartConstants'\r\n\r\nconst CART_INITIAL_state = {\r\n  cartItems: [],\r\n}\r\n\r\nexport const cartReducer = (state = CART_INITIAL_state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TO_CART:\r\n      const item = action.payload\r\n\r\n      const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map(x =>\r\n            x.product === existItem.product ? item : x,\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n    case actionTypes.REMOVE_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(x => x.product !== action.payload),\r\n      }\r\n    case actionTypes.FETCH_MY_CART:\r\n      return {\r\n        cartItems: [...action.payload.carts],\r\n      }\r\n    case 'CONFIRM_ORDER':\r\n      return {\r\n        ...state,\r\n        lastOrder: action.payload,\r\n      };\r\n      case actionTypes.CART_RESET:\r\n        return {\r\n          cartItems: [],\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n  }\r\n}\r\n","import * as actionTypes from '../constants/userContants'\r\nexport const USER_INITIAL_STATE = {\r\n  userInfo: {\r\n    isLogin: false,\r\n    details: {},\r\n  },\r\n}\r\n\r\nexport const userReducer = (state = USER_INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {userInfo: {...action.payload}}\r\n    case actionTypes.SET_INITIAL_STATE:\r\n      return USER_INITIAL_STATE\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\n// Reducers\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport {\r\n  getProductsReducer,\r\n  getProductDetailsReducer,\r\n} from './reducers/productReducers'\r\nimport {userReducer} from './reducers/userReducer'\r\n\r\nconst reducer = combineReducers({\r\n  cart: cartReducer,\r\n  getProducts: getProductsReducer,\r\n  getProductDetails: getProductDetailsReducer,\r\n  user: userReducer,\r\n})\r\n\r\nconst middleware = [thunk]\r\n\r\nconst cartItemsInLocalStorage = localStorage.getItem('cart')\r\n  ? JSON.parse(localStorage.getItem('cart'))\r\n  : []\r\n\r\nconst INITIAL_STATE = {\r\n  cart: {\r\n    cartItems: cartItemsInLocalStorage,\r\n  },\r\n}\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  INITIAL_STATE,\r\n  composeWithDevTools(applyMiddleware(...middleware)),\r\n)\r\n\r\nexport default store\r\n","import * as actionTypes from \"../constants/productConstants\";\r\n\r\nexport const getProductsReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_PRODUCTS_REQUEST:\r\n      return {\r\n        loading: true,\r\n        products: [],\r\n      };\r\n    case actionTypes.GET_PRODUCTS_SUCCESS:\r\n      return {\r\n        products: action.payload,\r\n        loading: false,\r\n      };\r\n    case actionTypes.GET_PRODUCTS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProductDetailsReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_PRODUCT_DETAILS_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case actionTypes.GET_PRODUCT_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        product: action.payload,\r\n      };\r\n    case actionTypes.GET_PRODUCT_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case actionTypes.GET_PRODUCT_DETAILS_RESET:\r\n      return {\r\n        product: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}